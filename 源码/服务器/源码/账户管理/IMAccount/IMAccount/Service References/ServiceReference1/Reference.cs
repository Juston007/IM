//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMAccount.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebServiceSoap")]
    public interface WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Login(string uid, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        System.Threading.Tasks.Task LoginAsync(string uid, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RegUser(string pwd, string alias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegUser", ReplyAction="*")]
        System.Threading.Tasks.Task RegUserAsync(string pwd, string alias);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetPwd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ResetPwd(string uid, string oldpwd, string newpwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetPwd", ReplyAction="*")]
        System.Threading.Tasks.Task ResetPwdAsync(string uid, string oldpwd, string newpwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddFriend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddFriend(string token, string touid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddFriend", ReplyAction="*")]
        System.Threading.Tasks.Task AddFriendAsync(string token, string touid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteFriend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteFriend(string token, string uid1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteFriend", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteFriendAsync(string token, string uid1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HandlerFriendRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void HandlerFriendRequest(string token, string senduid, int handler);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HandlerFriendRequest", ReplyAction="*")]
        System.Threading.Tasks.Task HandlerFriendRequestAsync(string token, string senduid, int handler);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFriendRequestList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetFriendRequestList(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFriendRequestList", ReplyAction="*")]
        System.Threading.Tasks.Task GetFriendRequestListAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFriendList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetFriendList(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFriendList", ReplyAction="*")]
        System.Threading.Tasks.Task GetFriendListAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SendMessage(string token, string touid, int msgtype, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMessage", ReplyAction="*")]
        System.Threading.Tasks.Task SendMessageAsync(string token, string touid, int msgtype, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetMessage(string token, string touid, int isread);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessage", ReplyAction="*")]
        System.Threading.Tasks.Task GetMessageAsync(string token, string touid, int isread);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageContent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetMessageContent(string token, string msgid, int msgtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMessageContent", ReplyAction="*")]
        System.Threading.Tasks.Task GetMessageContentAsync(string token, string msgid, int msgtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetUserInfo(string token, string queryuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserInfo", ReplyAction="*")]
        System.Threading.Tasks.Task GetUserInfoAsync(string token, string queryuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateFace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateFace(string token, string base64str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateFace", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateFaceAsync(string token, string base64str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetFace(string token, string queryuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFace", ReplyAction="*")]
        System.Threading.Tasks.Task GetFaceAsync(string token, string queryuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUserInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateUserInfo(string token, string alias, System.DateTime date, int sex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUserInfo", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateUserInfoAsync(string token, string alias, System.DateTime date, int sex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnHandlerEventList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetUnHandlerEventList(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnHandlerEventList", ReplyAction="*")]
        System.Threading.Tasks.Task GetUnHandlerEventListAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSenderUid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void GetSenderUid(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSenderUid", ReplyAction="*")]
        System.Threading.Tasks.Task GetSenderUidAsync(string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSoapChannel : IMAccount.ServiceReference1.WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSoapClient : System.ServiceModel.ClientBase<IMAccount.ServiceReference1.WebServiceSoap>, IMAccount.ServiceReference1.WebServiceSoap {
        
        public WebServiceSoapClient() {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Login(string uid, string pwd) {
            base.Channel.Login(uid, pwd);
        }
        
        public System.Threading.Tasks.Task LoginAsync(string uid, string pwd) {
            return base.Channel.LoginAsync(uid, pwd);
        }
        
        public void RegUser(string pwd, string alias) {
            base.Channel.RegUser(pwd, alias);
        }
        
        public System.Threading.Tasks.Task RegUserAsync(string pwd, string alias) {
            return base.Channel.RegUserAsync(pwd, alias);
        }
        
        public void ResetPwd(string uid, string oldpwd, string newpwd) {
            base.Channel.ResetPwd(uid, oldpwd, newpwd);
        }
        
        public System.Threading.Tasks.Task ResetPwdAsync(string uid, string oldpwd, string newpwd) {
            return base.Channel.ResetPwdAsync(uid, oldpwd, newpwd);
        }
        
        public void AddFriend(string token, string touid) {
            base.Channel.AddFriend(token, touid);
        }
        
        public System.Threading.Tasks.Task AddFriendAsync(string token, string touid) {
            return base.Channel.AddFriendAsync(token, touid);
        }
        
        public void DeleteFriend(string token, string uid1) {
            base.Channel.DeleteFriend(token, uid1);
        }
        
        public System.Threading.Tasks.Task DeleteFriendAsync(string token, string uid1) {
            return base.Channel.DeleteFriendAsync(token, uid1);
        }
        
        public void HandlerFriendRequest(string token, string senduid, int handler) {
            base.Channel.HandlerFriendRequest(token, senduid, handler);
        }
        
        public System.Threading.Tasks.Task HandlerFriendRequestAsync(string token, string senduid, int handler) {
            return base.Channel.HandlerFriendRequestAsync(token, senduid, handler);
        }
        
        public void GetFriendRequestList(string token) {
            base.Channel.GetFriendRequestList(token);
        }
        
        public System.Threading.Tasks.Task GetFriendRequestListAsync(string token) {
            return base.Channel.GetFriendRequestListAsync(token);
        }
        
        public void GetFriendList(string token) {
            base.Channel.GetFriendList(token);
        }
        
        public System.Threading.Tasks.Task GetFriendListAsync(string token) {
            return base.Channel.GetFriendListAsync(token);
        }
        
        public void SendMessage(string token, string touid, int msgtype, string msg) {
            base.Channel.SendMessage(token, touid, msgtype, msg);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string token, string touid, int msgtype, string msg) {
            return base.Channel.SendMessageAsync(token, touid, msgtype, msg);
        }
        
        public void GetMessage(string token, string touid, int isread) {
            base.Channel.GetMessage(token, touid, isread);
        }
        
        public System.Threading.Tasks.Task GetMessageAsync(string token, string touid, int isread) {
            return base.Channel.GetMessageAsync(token, touid, isread);
        }
        
        public void GetMessageContent(string token, string msgid, int msgtype) {
            base.Channel.GetMessageContent(token, msgid, msgtype);
        }
        
        public System.Threading.Tasks.Task GetMessageContentAsync(string token, string msgid, int msgtype) {
            return base.Channel.GetMessageContentAsync(token, msgid, msgtype);
        }
        
        public void GetUserInfo(string token, string queryuid) {
            base.Channel.GetUserInfo(token, queryuid);
        }
        
        public System.Threading.Tasks.Task GetUserInfoAsync(string token, string queryuid) {
            return base.Channel.GetUserInfoAsync(token, queryuid);
        }
        
        public void UpdateFace(string token, string base64str) {
            base.Channel.UpdateFace(token, base64str);
        }
        
        public System.Threading.Tasks.Task UpdateFaceAsync(string token, string base64str) {
            return base.Channel.UpdateFaceAsync(token, base64str);
        }
        
        public void GetFace(string token, string queryuid) {
            base.Channel.GetFace(token, queryuid);
        }
        
        public System.Threading.Tasks.Task GetFaceAsync(string token, string queryuid) {
            return base.Channel.GetFaceAsync(token, queryuid);
        }
        
        public void UpdateUserInfo(string token, string alias, System.DateTime date, int sex) {
            base.Channel.UpdateUserInfo(token, alias, date, sex);
        }
        
        public System.Threading.Tasks.Task UpdateUserInfoAsync(string token, string alias, System.DateTime date, int sex) {
            return base.Channel.UpdateUserInfoAsync(token, alias, date, sex);
        }
        
        public void GetUnHandlerEventList(string token) {
            base.Channel.GetUnHandlerEventList(token);
        }
        
        public System.Threading.Tasks.Task GetUnHandlerEventListAsync(string token) {
            return base.Channel.GetUnHandlerEventListAsync(token);
        }
        
        public void GetSenderUid(string token) {
            base.Channel.GetSenderUid(token);
        }
        
        public System.Threading.Tasks.Task GetSenderUidAsync(string token) {
            return base.Channel.GetSenderUidAsync(token);
        }
    }
}
